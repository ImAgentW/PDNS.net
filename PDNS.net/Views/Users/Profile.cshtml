@model PDNS.net.Models.User
@{
    ViewData["Title"] = "Profile";
}

<h4 class="page-title">User Profile</h4>
<div class="row">
    <div class="card card-with-nav w-100">
        <div class="card-header">
            <div class="row row-nav-line">
                <ul class="nav nav-pills nav-secondary  nav-pills-no-bd nav-pills-icons justify-content-center my-3 mx-auto" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" data-toggle="pill" href="#nav-edit" role="tab" aria-controls="pills-home-icon" aria-selected="false">
                            <i class="flaticon-pencil"></i>Edit
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="pill" href="#nav-view" role="tab" aria-controls="pills-pencil-icon" aria-selected="false">
                            <i class="flaticon-user"></i>View
                        </a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="card-body tab-content">
            <div class="tab-pane fade show active" id="nav-edit" role="tabpanel">
                <form asp-controller="Users" asp-action="Edit" method="POST" enctype="multipart/form-data">
                    <input type="hidden" name="ID" value="@Model.Id" />
                    <div class="row pb-3">
                        <div class="profile-picture mx-auto">
                            <div class="avatar avatar-xl">
                                <img src="@Model.Profile" alt="@Model.Name" class="avatar-img rounded-circle">
                                <input type="file" name="Profile" />
                            </div>
                        </div>
                    </div>
                    <div class="row my-3">
                        <div class="col-md-6">
                            <div class="form-group form-group-default">
                                <label>Name</label>
                                <input type="text" class="form-control" name="Name" placeholder="Name" value="@Model.Name" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group form-group-default">
                                <label>Email</label>
                                <input type="email" class="form-control" name="Email" placeholder="Name" value="@Model.Email" />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group form-group-default">
                                <label>Birth Date</label>
                                <input type="text" class="form-control" name="Birthday" placeholder="Birth Date" value="@Model.Birthday.ToString("dd/MM/yyyy")" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group form-group-default">
                                <label>Username</label>
                                <input type="text" class="form-control" name="Username" placeholder="Username" value="@Model.UserName" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group form-group-default">
                                <label>Password</label>
                                <input type="password" class="form-control" name="Password" placeholder="Password" disabled="disabled" />
                            </div>
                            <div class="form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" type="checkbox" name="ModifyPassword">
                                    <span class="form-check-sign">Modify Password</span>
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="text-right mt-3 mb-3">
                        <button class="btn btn-success" type="submit">Save</button>
                        <button class="btn btn-danger" type="reset">Reset</button>
                    </div>
                </form>
            </div>
            <div class="tab-pane fade" id="nav-view" role="tabpanel">
                <div class="col-md-4 mx-auto">
                    <div class="card card-profile">
                        <div class="card-header mb-5" style="background-image: url('../assets/img/blogpost.jpg')">
                            <div class="profile-picture">
                                <div class="avatar avatar-xl">
                                    <img src="@Model.Profile" alt="@Model.Name" class="avatar-img rounded-circle">
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="user-profile text-center">
                                <div class="name">@Model.Name</div>
                                <div class="job">@Model.UserName</div>
                                <div class="desc">@Model.Birthday.ToString("dd/MM/yyyy")</div>
                                <div class="view-profile">
                                    <a href="#" class="btn btn-secondary btn-block">View Full Profile</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <!-- DateTimePicker -->
    <link rel="stylesheet" href="~/assets/css/plugin/datepicker/bootstrap-datepicker3.min.css" />
    <link rel="stylesheet" href="~/assets/css/plugin/datepicker/theme.css" />
    <style>
        input[name="Profile"] {
            opacity: 0;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
    </style>
}
@section Scripts {
    <!-- JQuery UI -->
    <script src="~/assets/js/plugin/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
    <script src="~/assets/js/plugin/jquery-ui-touch-punch/jquery.ui.touch-punch.min.js"></script>
    <!-- Moment JS -->
    <script src="~/assets/js/plugin/moment/moment.min.js"></script>
    <!-- DateTimePicker -->
    <script src="~/assets/js/plugin/datepicker/bootstrap-datepicker.min.js"></script>
    <!-- SweetAlert -->
    <script src="/assets/js/plugin/sweetalert/sweetalert.min.js"></script>
    <script>
        $('input[name="Profile"]').on('change', (e) => {
            let avatar = $(e.target).parent().find('.avatar-img');

            let reader = new FileReader();
            reader.onload = function (e) {
                $(avatar).attr('src', e.target.result);
            }
            reader.readAsDataURL(e.target.files[0]); // convert to base64 string
        });

        $('input[name="ModifyPassword"]').on('change', (e) => {
            $('input[name="Password"]').attr('disabled', !$(e.target).is(':checked'));
        });

        $('input[name="Birthday"]').datepicker({
            format: 'dd/mm/yyyy'
        });

        $('form').submit((e) => {
            e.preventDefault();
            let messageContent = document.createElement("pre");
            let formData = new FormData(e.target);
            $.ajax({
                url: $(e.target).attr('action'),
                type: $(e.target).attr('method'),
                data: formData,
                processData: false,
                contentType: false,
                success: function (data) {
                    messageContent.innerHTML = data['Message'];
                    swal({
                        title: data['Title'],
                        content: messageContent,
                        icon: data['Icon'],
                        timer: 10000,
                        buttons: false
                    });
                }
            }).fail(function (e) {
                let data = e.responseJSON;
                messageContent.innerHTML = data['Message'];
                swal({
                    title: data['Title'],
                    content: messageContent,
                    icon: data['Icon'],
                    buttons: {
                        confirm: {
                            className: 'btn btn-success'
                        }
                    }
                });
            });
        });
    </script>
}